id: KouNbnhhsh
language: CSharp
name:
  Default: KouNbnhhsh
qualifiedName:
  Default: KouNbnhhsh
type: Assembly
modifiers: {}
items:
- id: KouFunctionPlugin
  commentId: N:KouFunctionPlugin
  language: CSharp
  name:
    CSharp: KouFunctionPlugin
    VB: KouFunctionPlugin
  nameWithType:
    CSharp: KouFunctionPlugin
    VB: KouFunctionPlugin
  qualifiedName:
    CSharp: KouFunctionPlugin
    VB: KouFunctionPlugin
  type: Namespace
  assemblies:
  - KouNbnhhsh
  modifiers: {}
  items:
  - id: KouFunctionPlugin.KouNbnhhsh
    commentId: T:KouFunctionPlugin.KouNbnhhsh
    language: CSharp
    name:
      CSharp: KouNbnhhsh
      VB: KouNbnhhsh
    nameWithType:
      CSharp: KouNbnhhsh
      VB: KouNbnhhsh
    qualifiedName:
      CSharp: KouFunctionPlugin.KouNbnhhsh
      VB: KouFunctionPlugin.KouNbnhhsh
    type: Class
    assemblies:
    - KouNbnhhsh
    namespace: KouFunctionPlugin
    source:
      remote:
        path: KoubotPlugin/KouNbnhhsh/KouNbnhhsh.cs
        branch: master
        repo: https://Euynac:Euynacdgityy233@github.com/Euynac/Koubot.git
      id: KouNbnhhsh
      path: ../../../Desktop/Project/LittleKou/Koubot/KoubotPlugin/KouNbnhhsh/KouNbnhhsh.cs
      startLine: 19
    summary: "\n第三方api测试 能不能好好说话\n"
    example: []
    syntax:
      content:
        CSharp: 'public class KouNbnhhsh : KouPlugin, IKouError'
        VB: >-
          Public Class KouNbnhhsh

              Inherits KouPlugin

              Implements IKouError
    inheritance:
    - System.Object
    - Koubot.SDK.Protocol.KouPlugin
    implements:
    - Koubot.SDK.Interface.IKouError
    inheritedMembers:
    - Koubot.SDK.Protocol.KouPlugin.ErrorCode
    - Koubot.SDK.Protocol.KouPlugin.ExtraErrorMessage
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - KouFunctionPlugin.KouNbnhhsh.Koubot.SDK.Tool.SystemExpand.BeNullOr``1(System.String)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: KouFunctionPlugin.KouNbnhhsh.All
      commentId: P:KouFunctionPlugin.KouNbnhhsh.All
      language: CSharp
      name:
        CSharp: All
        VB: All
      nameWithType:
        CSharp: KouNbnhhsh.All
        VB: KouNbnhhsh.All
      qualifiedName:
        CSharp: KouFunctionPlugin.KouNbnhhsh.All
        VB: KouFunctionPlugin.KouNbnhhsh.All
      type: Property
      assemblies:
      - KouNbnhhsh
      namespace: KouFunctionPlugin
      source:
        remote:
          path: KoubotPlugin/KouNbnhhsh/KouNbnhhsh.cs
          branch: master
          repo: https://Euynac:Euynacdgityy233@github.com/Euynac/Koubot.git
        id: All
        path: ../../../Desktop/Project/LittleKou/Koubot/KoubotPlugin/KouNbnhhsh/KouNbnhhsh.cs
        startLine: 27
      syntax:
        content:
          CSharp: >-
            [KouPluginParameter(ActivateKeyword = "all", Help = "默认功能中使用会将所有结果输出", Attributes = KouParameterAttribute.Bool)]

            public bool All { get; set; }
          VB: >-
            <KouPluginParameter(ActivateKeyword:="all", Help:="默认功能中使用会将所有结果输出", Attributes:=KouParameterAttribute.Bool)>

            Public Property All As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: KouFunctionPlugin.KouNbnhhsh.All*
      attributes:
      - type: Koubot.SDK.Protocol.KouPluginParameter
        ctor: Koubot.SDK.Protocol.KouPluginParameter.#ctor
        arguments: []
        namedArguments:
        - name: ActivateKeyword
          type: System.String
          value: all
        - name: Help
          type: System.String
          value: 默认功能中使用会将所有结果输出
        - name: Attributes
          type: Koubot.SDK.Protocol.KouParameterAttribute
          value: 4
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: KouFunctionPlugin.KouNbnhhsh.Default(System.String)
      commentId: M:KouFunctionPlugin.KouNbnhhsh.Default(System.String)
      language: CSharp
      name:
        CSharp: Default(String)
        VB: Default(String)
      nameWithType:
        CSharp: KouNbnhhsh.Default(String)
        VB: KouNbnhhsh.Default(String)
      qualifiedName:
        CSharp: KouFunctionPlugin.KouNbnhhsh.Default(System.String)
        VB: KouFunctionPlugin.KouNbnhhsh.Default(System.String)
      type: Method
      assemblies:
      - KouNbnhhsh
      namespace: KouFunctionPlugin
      source:
        remote:
          path: KoubotPlugin/KouNbnhhsh/KouNbnhhsh.cs
          branch: master
          repo: https://Euynac:Euynacdgityy233@github.com/Euynac/Koubot.git
        id: Default
        path: ../../../Desktop/Project/LittleKou/Koubot/KoubotPlugin/KouNbnhhsh/KouNbnhhsh.cs
        startLine: 30
      syntax:
        content:
          CSharp: public override string Default(string str = null)
          VB: Public Overrides Function Default(str As String = Nothing) As String
        parameters:
        - id: str
          type: System.String
        return:
          type: System.String
      overload: KouFunctionPlugin.KouNbnhhsh.Default*
      overridden: Koubot.SDK.Protocol.KouPlugin.Default(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: KouFunctionPlugin.KouNbnhhsh.CallAPI(System.String)
      commentId: M:KouFunctionPlugin.KouNbnhhsh.CallAPI(System.String)
      language: CSharp
      name:
        CSharp: CallAPI(String)
        VB: CallAPI(String)
      nameWithType:
        CSharp: KouNbnhhsh.CallAPI(String)
        VB: KouNbnhhsh.CallAPI(String)
      qualifiedName:
        CSharp: KouFunctionPlugin.KouNbnhhsh.CallAPI(System.String)
        VB: KouFunctionPlugin.KouNbnhhsh.CallAPI(System.String)
      type: Method
      assemblies:
      - KouNbnhhsh
      namespace: KouFunctionPlugin
      source:
        remote:
          path: KoubotPlugin/KouNbnhhsh/KouNbnhhsh.cs
          branch: master
          repo: https://Euynac:Euynacdgityy233@github.com/Euynac/Koubot.git
        id: CallAPI
        path: ../../../Desktop/Project/LittleKou/Koubot/KoubotPlugin/KouNbnhhsh/KouNbnhhsh.cs
        startLine: 74
      syntax:
        content:
          CSharp: public KouNbnhhsh.Root CallAPI(string str)
          VB: Public Function CallAPI(str As String) As KouNbnhhsh.Root
        parameters:
        - id: str
          type: System.String
        return:
          type: KouFunctionPlugin.KouNbnhhsh.Root
      overload: KouFunctionPlugin.KouNbnhhsh.CallAPI*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: KouFunctionPlugin.KouNbnhhsh.ResultItem
    commentId: T:KouFunctionPlugin.KouNbnhhsh.ResultItem
    language: CSharp
    name:
      CSharp: KouNbnhhsh.ResultItem
      VB: KouNbnhhsh.ResultItem
    nameWithType:
      CSharp: KouNbnhhsh.ResultItem
      VB: KouNbnhhsh.ResultItem
    qualifiedName:
      CSharp: KouFunctionPlugin.KouNbnhhsh.ResultItem
      VB: KouFunctionPlugin.KouNbnhhsh.ResultItem
    type: Class
    assemblies:
    - KouNbnhhsh
    namespace: KouFunctionPlugin
    source:
      remote:
        path: KoubotPlugin/KouNbnhhsh/KouNbnhhsh.cs
        branch: master
        repo: https://Euynac:Euynacdgityy233@github.com/Euynac/Koubot.git
      id: ResultItem
      path: ../../../Desktop/Project/LittleKou/Koubot/KoubotPlugin/KouNbnhhsh/KouNbnhhsh.cs
      startLine: 89
    syntax:
      content:
        CSharp: public class ResultItem
        VB: Public Class ResultItem
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - KouFunctionPlugin.KouNbnhhsh.ResultItem.Koubot.SDK.Tool.SystemExpand.BeNullOr``1(System.String)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: KouFunctionPlugin.KouNbnhhsh.ResultItem.Name
      commentId: P:KouFunctionPlugin.KouNbnhhsh.ResultItem.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: KouNbnhhsh.ResultItem.Name
        VB: KouNbnhhsh.ResultItem.Name
      qualifiedName:
        CSharp: KouFunctionPlugin.KouNbnhhsh.ResultItem.Name
        VB: KouFunctionPlugin.KouNbnhhsh.ResultItem.Name
      type: Property
      assemblies:
      - KouNbnhhsh
      namespace: KouFunctionPlugin
      source:
        remote:
          path: KoubotPlugin/KouNbnhhsh/KouNbnhhsh.cs
          branch: master
          repo: https://Euynac:Euynacdgityy233@github.com/Euynac/Koubot.git
        id: Name
        path: ../../../Desktop/Project/LittleKou/Koubot/KoubotPlugin/KouNbnhhsh/KouNbnhhsh.cs
        startLine: 94
      summary: "\n原文\n"
      example: []
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: KouFunctionPlugin.KouNbnhhsh.ResultItem.Name*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: KouFunctionPlugin.KouNbnhhsh.ResultItem.Trans
      commentId: P:KouFunctionPlugin.KouNbnhhsh.ResultItem.Trans
      language: CSharp
      name:
        CSharp: Trans
        VB: Trans
      nameWithType:
        CSharp: KouNbnhhsh.ResultItem.Trans
        VB: KouNbnhhsh.ResultItem.Trans
      qualifiedName:
        CSharp: KouFunctionPlugin.KouNbnhhsh.ResultItem.Trans
        VB: KouFunctionPlugin.KouNbnhhsh.ResultItem.Trans
      type: Property
      assemblies:
      - KouNbnhhsh
      namespace: KouFunctionPlugin
      source:
        remote:
          path: KoubotPlugin/KouNbnhhsh/KouNbnhhsh.cs
          branch: master
          repo: https://Euynac:Euynacdgityy233@github.com/Euynac/Koubot.git
        id: Trans
        path: ../../../Desktop/Project/LittleKou/Koubot/KoubotPlugin/KouNbnhhsh/KouNbnhhsh.cs
        startLine: 98
      summary: "\n结果\n"
      example: []
      syntax:
        content:
          CSharp: public List<string> Trans { get; set; }
          VB: Public Property Trans As List(Of String)
        parameters: []
        return:
          type: System.Collections.Generic.List{System.String}
      overload: KouFunctionPlugin.KouNbnhhsh.ResultItem.Trans*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: KouFunctionPlugin.KouNbnhhsh.Root
    commentId: T:KouFunctionPlugin.KouNbnhhsh.Root
    language: CSharp
    name:
      CSharp: KouNbnhhsh.Root
      VB: KouNbnhhsh.Root
    nameWithType:
      CSharp: KouNbnhhsh.Root
      VB: KouNbnhhsh.Root
    qualifiedName:
      CSharp: KouFunctionPlugin.KouNbnhhsh.Root
      VB: KouFunctionPlugin.KouNbnhhsh.Root
    type: Class
    assemblies:
    - KouNbnhhsh
    namespace: KouFunctionPlugin
    source:
      remote:
        path: KoubotPlugin/KouNbnhhsh/KouNbnhhsh.cs
        branch: master
        repo: https://Euynac:Euynacdgityy233@github.com/Euynac/Koubot.git
      id: Root
      path: ../../../Desktop/Project/LittleKou/Koubot/KoubotPlugin/KouNbnhhsh/KouNbnhhsh.cs
      startLine: 101
    syntax:
      content:
        CSharp: public class Root
        VB: Public Class Root
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    extensionMethods:
    - KouFunctionPlugin.KouNbnhhsh.Root.Koubot.SDK.Tool.SystemExpand.BeNullOr``1(System.String)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: KouFunctionPlugin.KouNbnhhsh.Root.Result
      commentId: P:KouFunctionPlugin.KouNbnhhsh.Root.Result
      language: CSharp
      name:
        CSharp: Result
        VB: Result
      nameWithType:
        CSharp: KouNbnhhsh.Root.Result
        VB: KouNbnhhsh.Root.Result
      qualifiedName:
        CSharp: KouFunctionPlugin.KouNbnhhsh.Root.Result
        VB: KouFunctionPlugin.KouNbnhhsh.Root.Result
      type: Property
      assemblies:
      - KouNbnhhsh
      namespace: KouFunctionPlugin
      source:
        remote:
          path: KoubotPlugin/KouNbnhhsh/KouNbnhhsh.cs
          branch: master
          repo: https://Euynac:Euynacdgityy233@github.com/Euynac/Koubot.git
        id: Result
        path: ../../../Desktop/Project/LittleKou/Koubot/KoubotPlugin/KouNbnhhsh/KouNbnhhsh.cs
        startLine: 106
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public List<KouNbnhhsh.ResultItem> Result { get; set; }
          VB: Public Property Result As List(Of KouNbnhhsh.ResultItem)
        parameters: []
        return:
          type: System.Collections.Generic.List{KouFunctionPlugin.KouNbnhhsh.ResultItem}
      overload: KouFunctionPlugin.KouNbnhhsh.Root.Result*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
references:
  Koubot.SDK.Protocol:
    name:
      CSharp:
      - name: Koubot.SDK.Protocol
        nameWithType: Koubot.SDK.Protocol
        qualifiedName: Koubot.SDK.Protocol
      VB:
      - name: Koubot.SDK.Protocol
        nameWithType: Koubot.SDK.Protocol
        qualifiedName: Koubot.SDK.Protocol
    isDefinition: true
    commentId: N:Koubot.SDK.Protocol
  Koubot.SDK.Protocol.KouPlugin:
    name:
      CSharp:
      - id: Koubot.SDK.Protocol.KouPlugin
        name: KouPlugin
        nameWithType: KouPlugin
        qualifiedName: Koubot.SDK.Protocol.KouPlugin
      VB:
      - id: Koubot.SDK.Protocol.KouPlugin
        name: KouPlugin
        nameWithType: KouPlugin
        qualifiedName: Koubot.SDK.Protocol.KouPlugin
    isDefinition: true
    parent: Koubot.SDK.Protocol
    commentId: T:Koubot.SDK.Protocol.KouPlugin
  Koubot.SDK.Protocol.KouPlugin.ErrorCode:
    name:
      CSharp:
      - id: Koubot.SDK.Protocol.KouPlugin.ErrorCode
        name: ErrorCode
        nameWithType: KouPlugin.ErrorCode
        qualifiedName: Koubot.SDK.Protocol.KouPlugin.ErrorCode
      VB:
      - id: Koubot.SDK.Protocol.KouPlugin.ErrorCode
        name: ErrorCode
        nameWithType: KouPlugin.ErrorCode
        qualifiedName: Koubot.SDK.Protocol.KouPlugin.ErrorCode
    isDefinition: true
    parent: Koubot.SDK.Protocol.KouPlugin
    commentId: P:Koubot.SDK.Protocol.KouPlugin.ErrorCode
  Koubot.SDK.Protocol.KouPlugin.ExtraErrorMessage:
    name:
      CSharp:
      - id: Koubot.SDK.Protocol.KouPlugin.ExtraErrorMessage
        name: ExtraErrorMessage
        nameWithType: KouPlugin.ExtraErrorMessage
        qualifiedName: Koubot.SDK.Protocol.KouPlugin.ExtraErrorMessage
      VB:
      - id: Koubot.SDK.Protocol.KouPlugin.ExtraErrorMessage
        name: ExtraErrorMessage
        nameWithType: KouPlugin.ExtraErrorMessage
        qualifiedName: Koubot.SDK.Protocol.KouPlugin.ExtraErrorMessage
    isDefinition: true
    parent: Koubot.SDK.Protocol.KouPlugin
    commentId: P:Koubot.SDK.Protocol.KouPlugin.ExtraErrorMessage
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  Koubot.SDK.Interface:
    name:
      CSharp:
      - name: Koubot.SDK.Interface
        nameWithType: Koubot.SDK.Interface
        qualifiedName: Koubot.SDK.Interface
      VB:
      - name: Koubot.SDK.Interface
        nameWithType: Koubot.SDK.Interface
        qualifiedName: Koubot.SDK.Interface
    isDefinition: true
    commentId: N:Koubot.SDK.Interface
  Koubot.SDK.Interface.IKouError:
    name:
      CSharp:
      - id: Koubot.SDK.Interface.IKouError
        name: IKouError
        nameWithType: IKouError
        qualifiedName: Koubot.SDK.Interface.IKouError
      VB:
      - id: Koubot.SDK.Interface.IKouError
        name: IKouError
        nameWithType: IKouError
        qualifiedName: Koubot.SDK.Interface.IKouError
    isDefinition: true
    parent: Koubot.SDK.Interface
    commentId: T:Koubot.SDK.Interface.IKouError
  Koubot.SDK.Tool.SystemExpand.BeNullOr``1(``0,System.String):
    name:
      CSharp:
      - id: Koubot.SDK.Tool.SystemExpand.BeNullOr``1(``0,System.String)
        name: BeNullOr<T>
        nameWithType: SystemExpand.BeNullOr<T>
        qualifiedName: Koubot.SDK.Tool.SystemExpand.BeNullOr<T>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Koubot.SDK.Tool.SystemExpand.BeNullOr``1(``0,System.String)
        name: BeNullOr(Of T)
        nameWithType: SystemExpand.BeNullOr(Of T)
        qualifiedName: Koubot.SDK.Tool.SystemExpand.BeNullOr(Of T)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Koubot.SDK.Tool.SystemExpand.BeNullOr``1(``0,System.String)
  Koubot.SDK.Tool:
    name:
      CSharp:
      - name: Koubot.SDK.Tool
        nameWithType: Koubot.SDK.Tool
        qualifiedName: Koubot.SDK.Tool
      VB:
      - name: Koubot.SDK.Tool
        nameWithType: Koubot.SDK.Tool
        qualifiedName: Koubot.SDK.Tool
    isDefinition: true
    commentId: N:Koubot.SDK.Tool
  Koubot.SDK.Tool.SystemExpand:
    name:
      CSharp:
      - id: Koubot.SDK.Tool.SystemExpand
        name: SystemExpand
        nameWithType: SystemExpand
        qualifiedName: Koubot.SDK.Tool.SystemExpand
      VB:
      - id: Koubot.SDK.Tool.SystemExpand
        name: SystemExpand
        nameWithType: SystemExpand
        qualifiedName: Koubot.SDK.Tool.SystemExpand
    isDefinition: true
    parent: Koubot.SDK.Tool
    commentId: T:Koubot.SDK.Tool.SystemExpand
  KouFunctionPlugin.KouNbnhhsh.Koubot.SDK.Tool.SystemExpand.BeNullOr``1(System.String):
    name:
      CSharp:
      - id: Koubot.SDK.Tool.SystemExpand.BeNullOr``1(System.String)
        name: BeNullOr<KouNbnhhsh>
        nameWithType: SystemExpand.BeNullOr<KouNbnhhsh>
        qualifiedName: Koubot.SDK.Tool.SystemExpand.BeNullOr<KouFunctionPlugin.KouNbnhhsh>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Koubot.SDK.Tool.SystemExpand.BeNullOr``1(System.String)
        name: BeNullOr(Of KouNbnhhsh)
        nameWithType: SystemExpand.BeNullOr(Of KouNbnhhsh)
        qualifiedName: Koubot.SDK.Tool.SystemExpand.BeNullOr(Of KouFunctionPlugin.KouNbnhhsh)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Koubot.SDK.Tool.SystemExpand.BeNullOr``1(``0,System.String)
    parent: Koubot.SDK.Tool.SystemExpand
    commentId: M:Koubot.SDK.Tool.SystemExpand.BeNullOr``1(``0,System.String)
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  KouFunctionPlugin.KouNbnhhsh.All*:
    name:
      CSharp:
      - id: KouFunctionPlugin.KouNbnhhsh.All*
        name: All
        nameWithType: KouNbnhhsh.All
        qualifiedName: KouFunctionPlugin.KouNbnhhsh.All
      VB:
      - id: KouFunctionPlugin.KouNbnhhsh.All*
        name: All
        nameWithType: KouNbnhhsh.All
        qualifiedName: KouFunctionPlugin.KouNbnhhsh.All
    isDefinition: true
    commentId: Overload:KouFunctionPlugin.KouNbnhhsh.All
  Koubot.SDK.Protocol.KouPluginParameter:
    name:
      CSharp:
      - id: Koubot.SDK.Protocol.KouPluginParameter
        name: KouPluginParameter
        nameWithType: KouPluginParameter
        qualifiedName: Koubot.SDK.Protocol.KouPluginParameter
      VB:
      - id: Koubot.SDK.Protocol.KouPluginParameter
        name: KouPluginParameter
        nameWithType: KouPluginParameter
        qualifiedName: Koubot.SDK.Protocol.KouPluginParameter
    isDefinition: true
    parent: Koubot.SDK.Protocol
    commentId: T:Koubot.SDK.Protocol.KouPluginParameter
  Koubot.SDK.Protocol.KouPluginParameter.#ctor:
    name:
      CSharp:
      - id: Koubot.SDK.Protocol.KouPluginParameter.#ctor
        name: KouPluginParameter
        nameWithType: KouPluginParameter.KouPluginParameter
        qualifiedName: Koubot.SDK.Protocol.KouPluginParameter.KouPluginParameter
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Koubot.SDK.Protocol.KouPluginParameter.#ctor
        name: KouPluginParameter
        nameWithType: KouPluginParameter.KouPluginParameter
        qualifiedName: Koubot.SDK.Protocol.KouPluginParameter.KouPluginParameter
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Koubot.SDK.Protocol.KouPluginParameter
    commentId: M:Koubot.SDK.Protocol.KouPluginParameter.#ctor
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  Koubot.SDK.Protocol.KouParameterAttribute:
    name:
      CSharp:
      - id: Koubot.SDK.Protocol.KouParameterAttribute
        name: KouParameterAttribute
        nameWithType: KouParameterAttribute
        qualifiedName: Koubot.SDK.Protocol.KouParameterAttribute
      VB:
      - id: Koubot.SDK.Protocol.KouParameterAttribute
        name: KouParameterAttribute
        nameWithType: KouParameterAttribute
        qualifiedName: Koubot.SDK.Protocol.KouParameterAttribute
    isDefinition: true
    parent: Koubot.SDK.Protocol
    commentId: T:Koubot.SDK.Protocol.KouParameterAttribute
  Koubot.SDK.Protocol.KouPlugin.Default(System.String):
    name:
      CSharp:
      - id: Koubot.SDK.Protocol.KouPlugin.Default(System.String)
        name: Default
        nameWithType: KouPlugin.Default
        qualifiedName: Koubot.SDK.Protocol.KouPlugin.Default
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Koubot.SDK.Protocol.KouPlugin.Default(System.String)
        name: Default
        nameWithType: KouPlugin.Default
        qualifiedName: Koubot.SDK.Protocol.KouPlugin.Default
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Koubot.SDK.Protocol.KouPlugin
    commentId: M:Koubot.SDK.Protocol.KouPlugin.Default(System.String)
  KouFunctionPlugin.KouNbnhhsh.Default*:
    name:
      CSharp:
      - id: KouFunctionPlugin.KouNbnhhsh.Default*
        name: Default
        nameWithType: KouNbnhhsh.Default
        qualifiedName: KouFunctionPlugin.KouNbnhhsh.Default
      VB:
      - id: KouFunctionPlugin.KouNbnhhsh.Default*
        name: Default
        nameWithType: KouNbnhhsh.Default
        qualifiedName: KouFunctionPlugin.KouNbnhhsh.Default
    isDefinition: true
    commentId: Overload:KouFunctionPlugin.KouNbnhhsh.Default
  KouFunctionPlugin:
    name:
      CSharp:
      - name: KouFunctionPlugin
        nameWithType: KouFunctionPlugin
        qualifiedName: KouFunctionPlugin
      VB:
      - name: KouFunctionPlugin
        nameWithType: KouFunctionPlugin
        qualifiedName: KouFunctionPlugin
    isDefinition: true
    commentId: N:KouFunctionPlugin
  KouFunctionPlugin.KouNbnhhsh.Root:
    name:
      CSharp:
      - id: KouFunctionPlugin.KouNbnhhsh.Root
        name: KouNbnhhsh.Root
        nameWithType: KouNbnhhsh.Root
        qualifiedName: KouFunctionPlugin.KouNbnhhsh.Root
      VB:
      - id: KouFunctionPlugin.KouNbnhhsh.Root
        name: KouNbnhhsh.Root
        nameWithType: KouNbnhhsh.Root
        qualifiedName: KouFunctionPlugin.KouNbnhhsh.Root
    isDefinition: true
    parent: KouFunctionPlugin
    commentId: T:KouFunctionPlugin.KouNbnhhsh.Root
  KouFunctionPlugin.KouNbnhhsh.CallAPI*:
    name:
      CSharp:
      - id: KouFunctionPlugin.KouNbnhhsh.CallAPI*
        name: CallAPI
        nameWithType: KouNbnhhsh.CallAPI
        qualifiedName: KouFunctionPlugin.KouNbnhhsh.CallAPI
      VB:
      - id: KouFunctionPlugin.KouNbnhhsh.CallAPI*
        name: CallAPI
        nameWithType: KouNbnhhsh.CallAPI
        qualifiedName: KouFunctionPlugin.KouNbnhhsh.CallAPI
    isDefinition: true
    commentId: Overload:KouFunctionPlugin.KouNbnhhsh.CallAPI
  KouFunctionPlugin.KouNbnhhsh:
    name:
      CSharp:
      - id: KouFunctionPlugin.KouNbnhhsh
        name: KouNbnhhsh
        nameWithType: KouNbnhhsh
        qualifiedName: KouFunctionPlugin.KouNbnhhsh
      VB:
      - id: KouFunctionPlugin.KouNbnhhsh
        name: KouNbnhhsh
        nameWithType: KouNbnhhsh
        qualifiedName: KouFunctionPlugin.KouNbnhhsh
    isDefinition: true
    commentId: T:KouFunctionPlugin.KouNbnhhsh
  KouFunctionPlugin.KouNbnhhsh.ResultItem.Koubot.SDK.Tool.SystemExpand.BeNullOr``1(System.String):
    name:
      CSharp:
      - id: Koubot.SDK.Tool.SystemExpand.BeNullOr``1(System.String)
        name: BeNullOr<KouNbnhhsh.ResultItem>
        nameWithType: SystemExpand.BeNullOr<KouNbnhhsh.ResultItem>
        qualifiedName: Koubot.SDK.Tool.SystemExpand.BeNullOr<KouFunctionPlugin.KouNbnhhsh.ResultItem>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Koubot.SDK.Tool.SystemExpand.BeNullOr``1(System.String)
        name: BeNullOr(Of KouNbnhhsh.ResultItem)
        nameWithType: SystemExpand.BeNullOr(Of KouNbnhhsh.ResultItem)
        qualifiedName: Koubot.SDK.Tool.SystemExpand.BeNullOr(Of KouFunctionPlugin.KouNbnhhsh.ResultItem)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Koubot.SDK.Tool.SystemExpand.BeNullOr``1(``0,System.String)
    parent: Koubot.SDK.Tool.SystemExpand
    commentId: M:Koubot.SDK.Tool.SystemExpand.BeNullOr``1(``0,System.String)
  KouFunctionPlugin.KouNbnhhsh.ResultItem.Name*:
    name:
      CSharp:
      - id: KouFunctionPlugin.KouNbnhhsh.ResultItem.Name*
        name: Name
        nameWithType: KouNbnhhsh.ResultItem.Name
        qualifiedName: KouFunctionPlugin.KouNbnhhsh.ResultItem.Name
      VB:
      - id: KouFunctionPlugin.KouNbnhhsh.ResultItem.Name*
        name: Name
        nameWithType: KouNbnhhsh.ResultItem.Name
        qualifiedName: KouFunctionPlugin.KouNbnhhsh.ResultItem.Name
    isDefinition: true
    commentId: Overload:KouFunctionPlugin.KouNbnhhsh.ResultItem.Name
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.String}
  KouFunctionPlugin.KouNbnhhsh.ResultItem.Trans*:
    name:
      CSharp:
      - id: KouFunctionPlugin.KouNbnhhsh.ResultItem.Trans*
        name: Trans
        nameWithType: KouNbnhhsh.ResultItem.Trans
        qualifiedName: KouFunctionPlugin.KouNbnhhsh.ResultItem.Trans
      VB:
      - id: KouFunctionPlugin.KouNbnhhsh.ResultItem.Trans*
        name: Trans
        nameWithType: KouNbnhhsh.ResultItem.Trans
        qualifiedName: KouFunctionPlugin.KouNbnhhsh.ResultItem.Trans
    isDefinition: true
    commentId: Overload:KouFunctionPlugin.KouNbnhhsh.ResultItem.Trans
  KouFunctionPlugin.KouNbnhhsh.ResultItem:
    name:
      CSharp:
      - id: KouFunctionPlugin.KouNbnhhsh.ResultItem
        name: KouNbnhhsh.ResultItem
        nameWithType: KouNbnhhsh.ResultItem
        qualifiedName: KouFunctionPlugin.KouNbnhhsh.ResultItem
      VB:
      - id: KouFunctionPlugin.KouNbnhhsh.ResultItem
        name: KouNbnhhsh.ResultItem
        nameWithType: KouNbnhhsh.ResultItem
        qualifiedName: KouFunctionPlugin.KouNbnhhsh.ResultItem
    isDefinition: true
    commentId: T:KouFunctionPlugin.KouNbnhhsh.ResultItem
  KouFunctionPlugin.KouNbnhhsh.Root.Koubot.SDK.Tool.SystemExpand.BeNullOr``1(System.String):
    name:
      CSharp:
      - id: Koubot.SDK.Tool.SystemExpand.BeNullOr``1(System.String)
        name: BeNullOr<KouNbnhhsh.Root>
        nameWithType: SystemExpand.BeNullOr<KouNbnhhsh.Root>
        qualifiedName: Koubot.SDK.Tool.SystemExpand.BeNullOr<KouFunctionPlugin.KouNbnhhsh.Root>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Koubot.SDK.Tool.SystemExpand.BeNullOr``1(System.String)
        name: BeNullOr(Of KouNbnhhsh.Root)
        nameWithType: SystemExpand.BeNullOr(Of KouNbnhhsh.Root)
        qualifiedName: Koubot.SDK.Tool.SystemExpand.BeNullOr(Of KouFunctionPlugin.KouNbnhhsh.Root)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Koubot.SDK.Tool.SystemExpand.BeNullOr``1(``0,System.String)
    parent: Koubot.SDK.Tool.SystemExpand
    commentId: M:Koubot.SDK.Tool.SystemExpand.BeNullOr``1(``0,System.String)
  System.Collections.Generic.List{KouFunctionPlugin.KouNbnhhsh.ResultItem}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: KouFunctionPlugin.KouNbnhhsh.ResultItem
        name: KouNbnhhsh.ResultItem
        nameWithType: KouNbnhhsh.ResultItem
        qualifiedName: KouFunctionPlugin.KouNbnhhsh.ResultItem
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: KouFunctionPlugin.KouNbnhhsh.ResultItem
        name: KouNbnhhsh.ResultItem
        nameWithType: KouNbnhhsh.ResultItem
        qualifiedName: KouFunctionPlugin.KouNbnhhsh.ResultItem
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{KouFunctionPlugin.KouNbnhhsh.ResultItem}
  KouFunctionPlugin.KouNbnhhsh.Root.Result*:
    name:
      CSharp:
      - id: KouFunctionPlugin.KouNbnhhsh.Root.Result*
        name: Result
        nameWithType: KouNbnhhsh.Root.Result
        qualifiedName: KouFunctionPlugin.KouNbnhhsh.Root.Result
      VB:
      - id: KouFunctionPlugin.KouNbnhhsh.Root.Result*
        name: Result
        nameWithType: KouNbnhhsh.Root.Result
        qualifiedName: KouFunctionPlugin.KouNbnhhsh.Root.Result
    isDefinition: true
    commentId: Overload:KouFunctionPlugin.KouNbnhhsh.Root.Result
